STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX(R)  M-2016.12-SP5-1-i20170831_145740 STIL output";
   Date "Fri May 14 01:06:12 2021";
   History {
      Ann {*     Uncollapsed Stuck Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT          2 *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD          0 *}
      Ann {* ATPG untestable                  AU          0 *}
      Ann {* Not detected                     ND          0 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                                 2 *}
      Ann {* test coverage                           100.00% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                           2 *}
      Ann {*     #basic_scan patterns                     2 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* rule  severity  #fails  description *}
      Ann {* ----  --------  ------  --------------------------------- *}
      Ann {* B9    warning       55  undriven module internal net *}
      Ann {* B10   warning       55  unconnected module internal net *}
      Ann {*  *}
      Ann {* There are no clocks *}
      Ann {* There are no constraint ports *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* top_module_name = c1908 *}
      Ann {* Unified STIL Flow *}
      Ann {* min_n_shifts = 1 *}
      Ann {* serial_flag = 1 *}
   }
}
Signals {
   "G101" In; "G104" In; "G107" In; "G110" In; "G113" In; "G116" In; "G119" In; "G122" In;
   "G125" In; "G128" In; "G131" In; "G134" In; "G137" In; "G140" In; "G143" In; "G146" In;
   "G210" In; "G214" In; "G217" In; "G221" In; "G224" In; "G227" In; "G234" In; "G237" In;
   "G469" In; "G472" In; "G475" In; "G478" In; "G898" In; "G900" In; "G902" In; "G952" In;
   "G953" In; "G75" Out;
}
SignalGroups {
   "_default_In_Timing_" = '"G101" + "G104" + "G107" + "G110" + "G113" + "G116" +
   "G119" + "G122" + "G125" + "G128" + "G131" + "G134" + "G137" + "G140" +
   "G143" + "G146" + "G210" + "G214" + "G217" + "G221" + "G224" + "G227" +
   "G234" + "G237" + "G469" + "G472" + "G475" + "G478" + "G898" + "G900" +
   "G902" + "G952" + "G953"'; // #signals=33
   "_pi" = '"G101" + "G104" + "G107" + "G110" + "G113" + "G116" + "G119" +
   "G122" + "G125" + "G128" + "G131" + "G134" + "G137" + "G140" + "G143" +
   "G146" + "G210" + "G214" + "G217" + "G221" + "G224" + "G227" + "G234" +
   "G237" + "G469" + "G472" + "G475" + "G478" + "G898" + "G900" + "G902" +
   "G952" + "G953"'; // #signals=33
   "_in" = '"G101" + "G104" + "G107" + "G110" + "G113" + "G116" + "G119" +
   "G122" + "G125" + "G128" + "G131" + "G134" + "G137" + "G140" + "G143" +
   "G146" + "G210" + "G214" + "G217" + "G221" + "G224" + "G227" + "G234" +
   "G237" + "G469" + "G472" + "G475" + "G478" + "G898" + "G900" + "G902" +
   "G952" + "G953"'; // #signals=33
   "_default_Out_Timing_" = '"G75"'; // #signals=1
   "_po" = '"G75"'; // #signals=1
   "_out" = '"G75"'; // #signals=1
}
Timing {
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "_default_In_Timing_" { 0 { '0ns' D; } }
         "_default_In_Timing_" { 1 { '0ns' U; } }
         "_default_In_Timing_" { Z { '0ns' Z; } }
         "_default_In_Timing_" { N { '0ns' N; } }
         "_default_Out_Timing_" { X { '0ns' X; } }
         "_default_Out_Timing_" { H { '0ns' X; '40ns' H; } }
         "_default_Out_Timing_" { T { '0ns' X; '40ns' T; } }
         "_default_Out_Timing_" { L { '0ns' X; '40ns' L; } }
      }
   }
}
ScanStructures {
   // Uncomment and modify the following to suit your design
   // ScanChain "chain_name" { ScanIn "chain_input_name"; ScanOut "chain_output_name"; }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "capture" {
      W "_default_WFT_";
      C { "_po"=X; }
      "forcePI": V { "_pi"=\r33 # ; }
      "measurePO": V { "_po"=#; }
   }
   // Uncomment and modify the following to suit your design
   // load_unload {
      // V { } // force clocks off and scan enable pins active
      // Shift { V { _si=#; _so=#; }} // pulse shift clocks
   // }
}
MacroDefs {
}
Pattern "_pattern_" {
   W "_default_WFT_";
   "precondition all Signals": C { "_pi"=\r33 0 ; "_po"=X; }
   "pattern 0": Call "capture" { 
      "_pi"=100011010100011010001010101000110; "_po"=H; }
   "pattern 1": Call "capture" { 
      "_pi"=110001101010001100011111000110100; "_po"=L; }
}

// Patterns reference 4 V statements, generating 4 test cycles
